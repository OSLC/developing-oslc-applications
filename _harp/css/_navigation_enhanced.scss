
.navburger {
  display: block;
  @extend %pos-rel;
  @include rem( padding, $navburger-size/2 $navburger-size/4 );
  background: $header-and-nav-bg;
  border: 0;
  
  opacity: .75;
  transition: opacity $navburger-transition-time ease-in-out;
  
  &:hover {
    opacity: 1;
  }
}

%navburger-line {   
	display: block;
  background: #ccc;
  border-radius: 3px;
  @include rem( height, $navburger-size/7 );
  @include rem( width, $navburger-size );
  
  transition: all $navburger-transition-time ease-in-out;
}

.navburger-line {
  @extend prevent-flicker;
  @extend %navburger-line;
  
  &.middle { 
		transition-delay: $navburger-transition-time/1.5;
  }
  
  &.top, &.bottom {
    @extend %navburger-line;
    position: absolute;
    content: '';
    transition-delay: 0s;
    transform-origin: $navburger-size/14 center;
  }
  &.top { @include rem(top, $navburger-size/4); }
  &.bottom { @include rem(bottom, $navburger-size/4); }
}

.primary-nav-is-open {

  .navburger {
    > .middle {
      transform: translate(100%, 0);
      opacity: 0;
      transition-delay: 0s;
    }

    > .top,
    > .bottom {
      transition-delay: $navburger-transition-time/1.5;
    }

    > .top {
      transform: translateZ(0) rotate($navburger-rotation);
    }
    > .bottom {
      transform: translateZ(0) rotate(-$navburger-rotation);
    }
  }

}

body > .header {
  transition: all .4s ease-in-out;
  overflow: hidden;
  max-height: 100px;

  @include respond-to(desk-up) {
    max-height: 0;
    opacity: 0;
    padding: 0;
  }
}

// This wraps the moving pieces to hide their movement
.off-canvas-wrap {
  @include respond-to(knee-up) {
    @include prevent-flicker;
    position: relative;
    overflow: hidden;
  }	  
}

.nav {
  @include prevent-flicker;
  max-height: 0px;
  overflow: hidden;
  transition: all .5s ease-in-out;
  // delay while the elements slide out
  transition-delay: $item-slide-duration * $total-items;
  
  // fun!
  @for $i from 1 through $total-items {
    .items > .item:nth-child(#{$total-items + 1 - $i}) {
      transition-delay: $i * $item-slide-duration;
    }
  }
  
  .item {
    transition-property: all;
    transition-duration: .33s;
    transition-timing-function: $ease-in-out-cubic;
    
    // slide them off-canvas
    transform: translate( -100% );
    
    @include respond-to(knee-up) {
      transform: none;
    }
  }
        
  @include respond-to(knee-up) {
    max-height: none !important;
    
    // needs a width
    width: $main-menu-width;
    
    // remove from box model, take up full height
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 1;
    background-color: $header-and-nav-bg;
    
    // handle the possibility that the content isn't big enough for the nav
    overflow-y: auto; 
    
    transition-delay: 0s;
    transition-duration: $main-menu-slide-duration;

  }
  
  @include respond-to(knee-only) {
    transform: translate3d(0,-100%,0);
  }
  
  .logo-text {
    margin-left: 0;
    text-align: center;
  }
  
  abbr.oslc-name,
  .project-name {
    display: block;
  }
  
  abbr.oslc-name {
    @include rem(margin-top, 10px);
    @extend %text-size-xxxl;
    @include rem(letter-spacing, 8px);
  }
  
  .project-name {
    margin-bottom: 11px;
  }
  
}

.primary .item {
  
  > a {
    @include linear-gradient(to right, $main-menu-current-item-bg 0%, $main-menu-current-item-bg 50%, $header-and-nav-bg 50%, $header-and-nav-bg 100% );
    background-size: 200% auto;
    
    //background-position: 100%;
    
    transition: all .33s ease-in-out;
  }
  
  &.current > a, a.current, a:hover {
    background-position: 0;
  }

  
}

.main {
  @include prevent-flicker;

  @include respond-to(knee-up) {
    transition: all .2s ease-in-out;
    transition-delay: $main-menu-slide-duration;
    @include rem(padding-left, 16px);
    @include rem(padding-right, 16px);
  }
  
  @include respond-to(desk-up) {
    margin-left: $main-menu-width;
    transform: none !important;
    transition-delay: 0s;
  }

}

.close-off-canvas {
  @extend %pos-abs;
  // effectively the box is zero pixels
  top: 0;
  right: 0;
  bottom: 100%;
  left: 0;

  background-color: rgba(0,0,0,.25);
  cursor: pointer;

  transition: opacity .4s ease-in-out;
  opacity: 0;
  
}

.primary-nav-is-open {
    
  .nav { 
    // small: expand in height
    max-height: 500px;
    // move immediately
    transition-delay: 0s;
    
    @include respond-to(knee-up) {
      transition-delay: $main-menu-slide-duration;
    }
    
    @include respond-to(knee-only) {
      transform: none;
    }
    
    // bump up the transition delays for each item so they "stack"
    @for $i from 1 through $total-items {
      .items > .item:nth-child(#{$i}) {
        transition-delay: $i * .05s;
      }
    }
    
    // slide items in when open
    .item {
      transform: none;
    }
    
  }
  
  .main {
    @include respond-to(knee-up) {
      transform: translate($main-menu-width,0);
      transition-delay: 0s;
      position: relative;
    }
  }
  
  .close-off-canvas {
    @include respond-to(knee-only) {
      // expand to full size
      bottom: 0;
      opacity: 1;
    
      // @todo this pops out of existence roughly when you close it
    }
    
  }
  
}
